21.12.09.7회차
===============================================================================
*단계별로 풀어보기 
===============================================================================





################################################################################################################
예제24)단계별로 풀어보기 / 기본수학 / ACM 호텔

*101 102 등을 만들기위해 층을 뺀 1~9의 수 앞에는 0을 붙여줘야한다. 이때 1~9인 수를 특정할때 조건문으로 10보다 작은 경우로 할수있지만
	정수의 자릿수를(길이) 표현하는 방법을 연습하기 위해서 조건을 1의 자리가 아닌경우로 설정해서 특정하라

https://www.acmicpc.net/problem/10250
################################################################################################################


답 : 

package backjun;
import java.util.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;
import java.io.IOException;
import java.util.StringTokenizer;

public class Main {
	private static final Scanner scan = new Scanner(System.in);  
	
	public static void main(String[] args) throws IOException {	
		int count = scan.nextInt();
		
		for (int i = 0; i < count; i++) {
			int height = scan.nextInt();
			int width = scan.nextInt(); 
			int customerNumber = scan.nextInt();
			
			int share = customerNumber / height + 1;
			int remainder = customerNumber % height;
			
			if (remainder == 0) {
				remainder = height;
				share -= 1;
			}
			
			
			String shareChange = String.valueOf(share);
			
			int length = (int) (Math.log10(share) + 1);
			
			if (length == 1) {
				shareChange = "0" + String.valueOf(share);
			}
//			if (share < 10) {
//				shareChange = "0" + String.valueOf(share);
//			}
			
			System.out.println(remainder + shareChange);
		}
		
	}
}//class










################################################################################################################
예제25)단계별로 풀어보기 / 기본수학 / 부녀회장이 될테야

*하드코딩하지말고 각 수를 상수화시켜 풀어라.
*속도를 빠르게하기위해서 System.println()과 scanner를 사용하지 않는다.
*출력은 단 한번만 하도록 한다.

https://www.acmicpc.net/problem/2775
################################################################################################################


답 : 

package backjun;
import java.util.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;
import java.io.IOException;
import java.util.StringTokenizer;

public class Main {
	private static final Scanner scan = new Scanner(System.in);
	private static final int ZERO_FLOOR = 0;
	private static final int FIRST_FLOOR = 1;
	private static final int TOP_FLOOR = 14;
	
	private static final int FIRST_ROOM = 1;
	private static final int SECOND_ROOM = 2;
	private static final int LAST_ROOM = 14;
	
	private static final int ONE_PEOPLE = 1;
	
	private static int[][] apt = new int[TOP_FLOOR + 1][LAST_ROOM + 1]; 
	
	public static void main(String[] args) throws IOException {	
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		StringBuilder sb = new StringBuilder();
		
		int T = Integer.parseInt(br.readLine());
		
		makeApt();
		
		for (int i = 0; i < T; i++) {
			int floor = Integer.parseInt(br.readLine());
			int room = Integer.parseInt(br.readLine());
			
			sb.append(apt[floor][room]).append("\n");
		}
		
		bw.write(sb.toString());
		bw.newLine();
		bw.flush();
		bw.close();
		
		br.close();
	}
	
	public static void makeApt() {
		for (int i = FIRST_FLOOR; i <= TOP_FLOOR ; i++) {
			apt[i][FIRST_ROOM] = ONE_PEOPLE; // 층
			apt[ZERO_FLOOR][i] = i; // 호
		}
		
		for (int i = FIRST_FLOOR; i <= TOP_FLOOR; i++) {
			for (int j = SECOND_ROOM; j <= LAST_ROOM; j++) {
				apt[i][j] = apt[i][j - 1] + apt[i - 1][j];
			}
		}
	}
}//class






